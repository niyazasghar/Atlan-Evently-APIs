<?xml version="1.0" encoding="UTF-8"?>
<!--
  Evently – Spring Boot 3.5.x, Java 17
  This POM uses Spring Boot's parent for dependency management, so most library versions are inherited.
  Only a few versions (springdoc, jjwt) are specified explicitly as properties for clarity.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Spring Boot parent manages plugin and dependency versions -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.5</version>
		<relativePath/>
	</parent>

	<groupId>atlan.evently</groupId>
	<artifactId>atlan</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>evently</name>
	<description>evently for atlan</description>

	<properties>
		<!-- Target Java release -->
		<java.version>17</java.version>

		<!-- Centralize a few explicit versions -->
		<springdoc.version>2.5.0</springdoc.version>
		<jjwt.version>0.12.5</jjwt.version>
	</properties>

	<dependencies>
		<!-- Web/API layer (REST, JSON) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Data JPA (Hibernate) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Validation annotations (@Valid, @Email, etc.) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Security (filters, authorization) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Actuator (health, metrics, readiness/liveness) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- OpenAPI/Swagger UI for API docs -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>

		<!-- Database migrations (Flyway core + Postgres support) -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-database-postgresql</artifactId>
		</dependency>

		<!-- PostgreSQL JDBC driver (runtime only) -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Caching (Spring cache abstraction + Caffeine provider) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>

		<!-- JWT (JJWT 0.12.x) – api + runtime impl + jackson serializer -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${jjwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>${jjwt.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- (Optional) Mail support if needed for notifications/verification -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- Lombok (compile-time only; not required at runtime) -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- TEST DEPENDENCIES -->

		<!-- JUnit 5 + Mockito + Spring Test utilities -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Spring Security test helpers (withMockUser, etc.) -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Testcontainers: JUnit integration + PostgreSQL module (for integration tests) -->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.testcontainers</groupId>-->
<!--			<artifactId>postgresql</artifactId>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->

		<!-- Spring Boot helpers for Testcontainers (@ServiceConnection in Boot 3.1+) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-testcontainers</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- (Optional) H2 for super-fast @DataJpaTest slice tests; keep Postgres for ITs -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>


		<!-- (Optional) ArchUnit to enforce architectural rules (e.g., “no @Cacheable in booking”) -->
		<!--
        <dependency>
          <groupId>com.tngtech.archunit</groupId>
          <artifactId>archunit-junit5</artifactId>
          <version>1.3.0</version>
          <scope>test</scope>
        </dependency>
        -->
	</dependencies>

	<!--
      Spring Boot manages most versions via its dependency management.
      If you prefer pinning Testcontainers via a BOM, you can uncomment the section below.
    -->
	<!--
    <dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>org.testcontainers</groupId>
          <artifactId>testcontainers-bom</artifactId>
          <version>1.20.2</version>
          <type>pom</type>
          <scope>import</scope>
        </dependency>
      </dependencies>
    </dependencyManagement>
    -->

	<build>
		<plugins>
			<!-- Boots the app, repackages JARs, and integrates with Spring Boot's lifecycle -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- Ensures repackage runs automatically during package -->
					<mainClass>atlan.evently.atlan.EventlyApplication</mainClass>
				</configuration>
			</plugin>

			<!-- Compiler plugin: align with Java release; usually inherited, but explicit for clarity -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<release>${java.version}</release>
				</configuration>
			</plugin>

			<!-- (Optional) Surefire for unit tests and Failsafe for ITs; Boot config is often enough
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <executions>
                <execution>
                  <goals>
                    <goal>integration-test</goal>
                    <goal>verify</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            -->
		</plugins>
	</build>
</project>
